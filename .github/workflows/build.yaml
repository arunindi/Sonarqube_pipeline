name: Build, Push Docker Image, and Analyze with SonarQube

on:
  push:
    branches:
      - main

jobs:
  build-push-and-analyze:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build .NET application
      run: dotnet build --configuration Release simplecs/simplecs.csproj

    - name: Publish .NET application
      run: dotnet publish --configuration Release simplecs/simplecs.csproj -o ./published

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: docker build -t aindi123/simplecs:1.0.RELEASE -f simplecs/Dockerfile .

    - name: Log in to DockerHub
      run: docker login -u aindi123 -p dckr_pat_AhNdDxGeIDVyDVvyXsHYkmVp3fw

    - name: Push Docker image
      run: docker push aindi123/simplecs:1.0.RELEASE

    - name: Build Sonarqube
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~\.sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarQube scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
         New-Item -Path .\.sonar\scanner -ItemType Directory
         dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Build and analyze
      shell: powershell
      run: |
         .\.sonar\scanner\dotnet-sonarscanner begin /k:"Git_Action" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
         dotnet build
         .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

