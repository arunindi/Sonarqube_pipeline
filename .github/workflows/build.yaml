name: Build, Push Docker Image, and Analyze with SonarQube

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build .NET application
      run: dotnet build --configuration Release simplecs/simplecs.csproj

    - name: Publish .NET application
      run: dotnet publish --configuration Release simplecs/simplecs.csproj -o ./published
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: docker build -t aindi123/simplecs:1.0.RELEASE -f simplecs/Dockerfile .

    - name: Log in to DockerHub
      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin


    - name: Push Docker image
      run: docker push aindi123/simplecs:1.0.RELEASE
      
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Cache SonarQube packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v2
      with:
        path: .sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarQube scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        mkdir -p .sonar/scanner
        dotnet tool install --global dotnet-sonarscanner
        
    - name: Install SonarScanner for .NET tool
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Add dotnet tools to PATH
      shell: bash
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
      
    - name: Check installed .NET Core tools
      run: dotnet tool list --global

    - name: Build and analyze
      shell: pwsh
      run: |
        dotnet-sonarscanner begin /k:"Git_Action" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
        dotnet build --configuration Release simplecs/simplecs.csproj
        dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"


